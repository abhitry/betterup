version: "3.9"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/mydb
      REDIS_URL: redis://redis:6379
      JWT_SECRET: secret
      PORT: 3001
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://localhost:3001
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

  pusher:
    build:
      context: .
      dockerfile: docker/Dockerfile.pusher
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/mydb
      REDIS_URL: redis://redis:6379
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_started
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/mydb
      REDIS_URL: redis://redis:6379
      REGION_ID: f5a13f6c-8e91-42b8-9c0e-07b4567a98e0
      WORKER_ID: "1"
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: